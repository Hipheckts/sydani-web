{"ast":null,"code":"import _objectWithoutProperties from\"/Users/hipheckt/codes/sapioclub/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";// This is used to determine if a user is authenticated and\n// if they are allowed to visit the page they navigated to.\n// If they are: they proceed to the page\n// If not: they are redirected to the login page.\nimport React from'react';import{Redirect,Route}from'react-router-dom';var PrivateRoute=function PrivateRoute(_ref){var Component=_ref.component,rest=_objectWithoutProperties(_ref,[\"component\"]);// Add your own authentication on the below line.\nvar isLoggedIn=localStorage[\"appState\"]?JSON.parse(localStorage[\"appState\"]).isLoggedIn:\"\";var date=20;return/*#__PURE__*/React.createElement(Route,Object.assign({},rest,{render:function render(props){return isLoggedIn?date!=15?/*#__PURE__*/React.createElement(Component,props):/*#__PURE__*/React.createElement(Redirect,{to:{pathname:'/expired',state:{from:props.location}}}):/*#__PURE__*/React.createElement(Redirect,{to:{pathname:'/login',state:{from:props.location}}});}}));};export default PrivateRoute;","map":{"version":3,"sources":["/Users/hipheckt/codes/sapioclub/react/src/PrivateRoute.js"],"names":["React","Redirect","Route","PrivateRoute","Component","component","rest","isLoggedIn","localStorage","JSON","parse","date","props","pathname","state","from","location"],"mappings":"gLAAA;AACA;AAEA;AACA;AACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,CAAmBC,KAAnB,KAAgC,kBAAhC,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAAuC,IAAzBC,CAAAA,SAAyB,MAApCC,SAAoC,CAAXC,IAAW,8CAE1D;AACA,GAAMC,CAAAA,UAAU,CAAGC,YAAY,CAAC,UAAD,CAAZ,CAA2BC,IAAI,CAACC,KAAL,CAAWF,YAAY,CAAC,UAAD,CAAvB,EAAqCD,UAAhE,CAA6E,EAAhG,CAEA,GAAII,CAAAA,IAAI,CAAG,EAAX,CAEA,mBACE,oBAAC,KAAD,kBACML,IADN,EAEE,MAAM,CAAE,gBAAAM,KAAK,QACXL,CAAAA,UAAU,CACRI,IAAI,EAAI,EAAR,cACE,oBAAC,SAAD,CAAeC,KAAf,CADF,cAGE,oBAAC,QAAD,EAAU,EAAE,CAAE,CAAEC,QAAQ,CAAE,UAAZ,CAAwBC,KAAK,CAAE,CAAEC,IAAI,CAAEH,KAAK,CAACI,QAAd,CAA/B,CAAd,EAJM,cAOR,oBAAC,QAAD,EAAU,EAAE,CAAE,CAAEH,QAAQ,CAAE,QAAZ,CAAsBC,KAAK,CAAE,CAAEC,IAAI,CAAEH,KAAK,CAACI,QAAd,CAA7B,CAAd,EARS,EAFf,GADF,CAgBD,CAvBD,CAyBA,cAAeb,CAAAA,YAAf","sourcesContent":["// This is used to determine if a user is authenticated and\n// if they are allowed to visit the page they navigated to.\n\n// If they are: they proceed to the page\n// If not: they are redirected to the login page.\nimport React from 'react'\nimport { Redirect, Route } from 'react-router-dom'\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n\n  // Add your own authentication on the below line.\n  const isLoggedIn = localStorage[\"appState\"] ? JSON.parse(localStorage[\"appState\"]).isLoggedIn : \"\";\n  \n  let date = 20;\n\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        isLoggedIn ? (\n          date != 15 ? (\n            <Component {...props} />\n          ) : (\n            <Redirect to={{ pathname: '/expired', state: { from: props.location } }} />\n          )\n        ) : (\n          <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n        )\n      }\n    />\n  )\n}\n\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}