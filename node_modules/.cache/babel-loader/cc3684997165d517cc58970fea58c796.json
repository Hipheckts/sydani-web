{"ast":null,"code":"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Avatar from \"../assets/img/default-user-avatar.png\";\nimport swal from \"sweetalert\";\nimport $ from \"jquery\"; // import \"../assets/css/app.css\";\n\nimport Menu1 from \"../assets/img/menu-light-e.svg\";\nimport Logo from \"../assets/img/logo-light.svg\";\nimport MenuList from \"./Menu\";\nexport default class Header extends Component {\n  constructor(props) {\n    super(props);\n\n    this.logoutUser = () => {\n      localStorage.clear();\n      window.location.href = \"/login\";\n    };\n\n    this.state = {\n      token: localStorage[\"appState\"] ? JSON.parse(localStorage[\"appState\"]).user.token : \"\",\n      user: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`${axios.defaults.baseURL}/user/${JSON.parse(localStorage[\"appState\"]).user.id}`, {\n      headers: {\n        Authorization: `Bearer ${this.state.token}`\n      }\n    }).then(response => {\n      //console.log(response);\n      return response;\n    }).then(json => {\n      if (json.data.success) {\n        this.setState({\n          user: json.data.user[0]\n        }); // } else alert(\"Cannot Fetch Data!\");\n      } else swal(\"Oops!\", \"Cannot Fetch Data!\", \"error\");\n    }).catch(error => {\n      console.error(`An Error Occured! ${error}`);\n    }); // alert(id)\n  }\n\n  render() {\n    // switch function for login/signup\n    const mobileMenuOpen = e => {\n      $(\"#mobile-navbar\").addClass(\"open-mobile-menu\");\n      $(\".mobile-menu-overlay\").addClass(\"show-mobile-menu-overlay\");\n    };\n\n    const mobileMenuClose = e => {\n      $(\"#mobile-navbar\").removeClass(\"open-mobile-menu\");\n      $(\".mobile-menu-overlay\").removeClass(\"show-mobile-menu-overlay\");\n    };\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null);\n  }\n\n}","map":{"version":3,"sources":["/Users/hipheckt/codes/sapioclub/react/src/common/Header.js"],"names":["React","Component","Link","axios","Avatar","swal","$","MenuList","Header","constructor","props","logoutUser","localStorage","clear","window","location","href","state","token","JSON","parse","user","componentDidMount","get","defaults","baseURL","id","headers","Authorization","then","response","json","data","success","setState","catch","error","console","render","mobileMenuOpen","e","addClass","mobileMenuClose","removeClass"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,uCAAnB;AAEA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,CAAP,MAAc,QAAd,C,CAEA;;;;AAIA,OAAOC,QAAP,MAAqB,QAArB;AAEA,eAAe,MAAMC,MAAN,SAAqBP,SAArB,CAA+B;AAC5CQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAoCnBC,UApCmB,GAoCN,MAAM;AACjBC,MAAAA,YAAY,CAACC,KAAb;AACAC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,QAAvB;AACD,KAvCkB;;AAEjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAEN,YAAY,CAAC,UAAD,CAAZ,GACHO,IAAI,CAACC,KAAL,CAAWR,YAAY,CAAC,UAAD,CAAvB,EAAqCS,IAArC,CAA0CH,KADvC,GAEH,EAHO;AAIXG,MAAAA,IAAI,EAAE;AAJK,KAAb;AAMD;;AACDC,EAAAA,iBAAiB,GAAG;AAClBnB,IAAAA,KAAK,CACFoB,GADH,CAEK,GAAEpB,KAAK,CAACqB,QAAN,CAAeC,OAAQ,SACxBN,IAAI,CAACC,KAAL,CAAWR,YAAY,CAAC,UAAD,CAAvB,EAAqCS,IAArC,CAA0CK,EAC3C,EAJL,EAKI;AACEC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAAS,KAAKX,KAAL,CAAWC,KAAM;AADnC;AADX,KALJ,EAWGW,IAXH,CAWSC,QAAD,IAAc;AAClB;AACA,aAAOA,QAAP;AACD,KAdH,EAeGD,IAfH,CAeSE,IAAD,IAAU;AACd,UAAIA,IAAI,CAACC,IAAL,CAAUC,OAAd,EAAuB;AACrB,aAAKC,QAAL,CAAc;AAAEb,UAAAA,IAAI,EAAEU,IAAI,CAACC,IAAL,CAAUX,IAAV,CAAe,CAAf;AAAR,SAAd,EADqB,CAErB;AACD,OAHD,MAGOhB,IAAI,CAAC,OAAD,EAAU,oBAAV,EAAgC,OAAhC,CAAJ;AACR,KApBH,EAqBG8B,KArBH,CAqBUC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACD,KAAR,CAAe,qBAAoBA,KAAM,EAAzC;AACD,KAvBH,EADkB,CAyBlB;AACD;;AAMDE,EAAAA,MAAM,GAAG;AACP;AACA,UAAMC,cAAc,GAAIC,CAAD,IAAO;AAC5BlC,MAAAA,CAAC,CAAC,gBAAD,CAAD,CAAoBmC,QAApB,CAA6B,kBAA7B;AACAnC,MAAAA,CAAC,CAAC,sBAAD,CAAD,CAA0BmC,QAA1B,CAAmC,0BAAnC;AACD,KAHD;;AAKA,UAAMC,eAAe,GAAIF,CAAD,IAAO;AAC7BlC,MAAAA,CAAC,CAAC,gBAAD,CAAD,CAAoBqC,WAApB,CAAgC,kBAAhC;AACArC,MAAAA,CAAC,CAAC,sBAAD,CAAD,CAA0BqC,WAA1B,CAAsC,0BAAtC;AACD,KAHD;;AAKA,wBACE,yCADF;AAID;;AA1D2C","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport axios from \"axios\";\nimport Avatar from \"../assets/img/default-user-avatar.png\";\n\nimport swal from \"sweetalert\";\nimport $ from \"jquery\";\n\n// import \"../assets/css/app.css\";\n\nimport Menu1 from \"../assets/img/menu-light-e.svg\";\nimport Logo from \"../assets/img/logo-light.svg\";\nimport MenuList from \"./Menu\";\n\nexport default class Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      token: localStorage[\"appState\"]\n        ? JSON.parse(localStorage[\"appState\"]).user.token\n        : \"\",\n      user: [],\n    };\n  }\n  componentDidMount() {\n    axios\n      .get(\n        `${axios.defaults.baseURL}/user/${\n          JSON.parse(localStorage[\"appState\"]).user.id\n        }`,\n        {\n          headers: {\n            Authorization: `Bearer ${this.state.token}`,\n          },\n        }\n      )\n      .then((response) => {\n        //console.log(response);\n        return response;\n      })\n      .then((json) => {\n        if (json.data.success) {\n          this.setState({ user: json.data.user[0] });\n          // } else alert(\"Cannot Fetch Data!\");\n        } else swal(\"Oops!\", \"Cannot Fetch Data!\", \"error\");\n      })\n      .catch((error) => {\n        console.error(`An Error Occured! ${error}`);\n      });\n    // alert(id)\n  }\n  logoutUser = () => {\n    localStorage.clear();\n    window.location.href = \"/login\";\n  };\n\n  render() {\n    // switch function for login/signup\n    const mobileMenuOpen = (e) => {\n      $(\"#mobile-navbar\").addClass(\"open-mobile-menu\");\n      $(\".mobile-menu-overlay\").addClass(\"show-mobile-menu-overlay\");\n    };\n\n    const mobileMenuClose = (e) => {\n      $(\"#mobile-navbar\").removeClass(\"open-mobile-menu\");\n      $(\".mobile-menu-overlay\").removeClass(\"show-mobile-menu-overlay\");\n    };\n\n    return (\n      <>\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}