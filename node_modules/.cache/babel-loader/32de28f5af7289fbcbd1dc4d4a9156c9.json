{"ast":null,"code":"var _jsxFileName = \"/Users/hipheckt/codes/niyiogunwuyi/react/src/Stories.js\";\nimport React from \"react\";\nimport axios from \"axios\"; // import { Link } from \"react-router-dom\";\n// import Sound from 'react-sound';\n\nimport swal from 'sweetalert';\nimport $ from \"jquery\";\nimport Header from \"./common/Header.js\";\nimport Pen from \"./assets/images/icons/pen.png\";\n\nvar _name, _tribute;\n\nclass Story extends React.Component {\n  constructor(props) {\n    super(props); // let { user } = this.props.appstate;\n\n    this.fetchTributes = e => {\n      axios.get(`${axios.defaults.baseURL}/stories`).then(response => {\n        console.log(response);\n        return response;\n      }).then(json => {\n        if (json.data.success) {\n          this.setState({\n            tributes: json.data.tributes\n          });\n        } else alert(\"Fetching Tributes Failed!\");\n      }).catch(error => {\n        console.error(`An Error Occured! ${error}`);\n      });\n    };\n\n    this.handleTributePost = e => {\n      e.preventDefault();\n      var formData = new FormData();\n      formData.append(\"name\", _name.value);\n      formData.append(\"tribute\", _tribute.value);\n      console.log(formData);\n      axios({\n        method: 'post',\n        url: `${axios.defaults.baseURL}/story`,\n        data: formData\n      }).then(response => {\n        console.log(response);\n        return response;\n      }).then(json => {\n        const {\n          id,\n          name,\n          tribute\n        } = json.data.tribute;\n        let tributeData = {\n          id,\n          name,\n          tribute,\n          timestamp: new Date().toString()\n        };\n        let appState = {\n          tribute: tributeData\n        }; // save app state with user date in local storage\n\n        localStorage[\"appState\"] = JSON.stringify(appState);\n        this.setState({\n          tribute: appState.tribute\n        });\n\n        if (json.data.success === true) {\n          swal(\"Published!\", \"\" + json.data.message, \"success\", {\n            button: false,\n            timer: 1500\n          });\n          $(\"#name-input\").val('');\n          $(\"#tribute-input\").val('');\n          this.fetchTributes(); // redirect home\n          // this.props.history.push(\"/dashboard\");\n        } else {\n          // alert(json.data.message);\n          swal(\"Alert!\", \"\" + json.data.message, \"warning\");\n        }\n      }).catch(error => {\n        // alert(\"An Error Occured!\" + error);\n        console.log(error.response.data);\n        swal(\"Warning!\", \"\" + error.response.data.message.tribute, \"warning\");\n      });\n    };\n\n    this.state = {\n      tributes: [],\n      currentPage: 1,\n      tributesPerPage: 10\n    };\n  }\n\n  componentDidMount() {\n    this.fetchTributes();\n  }\n\n  render() {\n    const {\n      currentPage,\n      tributesPerPage\n    } = this.state; // Logic for displaying tributes\n\n    const tributesList = this.state.tributes;\n    const indexOfLastTribute = currentPage * tributesPerPage;\n    const indexOfFirstTribute = indexOfLastTribute - tributesPerPage;\n    const currentTributes = tributesList.slice(indexOfFirstTribute, indexOfLastTribute);\n    const renderTributes = currentTributes.map((tribute, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"v-card\",\n        key: tribute.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"tribute-card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"poster-name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 19\n        }\n      }, \"Posted by \", tribute.name, \" on \", tribute.date), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"post\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 19\n        }\n      }, tribute.tribute)));\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center-canvas\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"post-tribute-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }, \"Wrote a Story \", /*#__PURE__*/React.createElement(\"img\", {\n      src: Pen,\n      className: \"pen\",\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 54\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 98\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"post-tribute-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"select-tribute\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.selectTribute,\n      className: \"select-tribute-icon\",\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"entry-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleTributePost,\n      method: \"post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      ref: input => _tribute = input,\n      placeholder: \"Add your tribute text here...\",\n      name: \"tribute\",\n      type: \"text\",\n      class: \"form-control\",\n      maxlength: \"15000\",\n      cols: \"20\",\n      rows: \"5\",\n      id: \"tribute-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      ref: input => _name = input,\n      name: \"name\",\n      placeholder: \"Please enter your name\",\n      type: \"text\",\n      class: \"form-control\",\n      id: \"name-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      class: \"btn btn-primary float-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 19\n      }\n    }, \"Publish Tribute\")))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 43\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    }, \"Tributes \", /*#__PURE__*/React.createElement(\"img\", {\n      src: Pen,\n      className: \"pen\",\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 26\n      }\n    }))), renderTributes));\n  }\n\n} // module.exports = Tribute;\n\n\nexport default Story;","map":{"version":3,"sources":["/Users/hipheckt/codes/niyiogunwuyi/react/src/Stories.js"],"names":["React","axios","swal","$","Header","Pen","_name","_tribute","Story","Component","constructor","props","fetchTributes","e","get","defaults","baseURL","then","response","console","log","json","data","success","setState","tributes","alert","catch","error","handleTributePost","preventDefault","formData","FormData","append","value","method","url","id","name","tribute","tributeData","timestamp","Date","toString","appState","localStorage","JSON","stringify","message","button","timer","val","state","currentPage","tributesPerPage","componentDidMount","render","tributesList","indexOfLastTribute","indexOfFirstTribute","currentTributes","slice","renderTributes","map","index","date","selectTribute","input"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\n// import { Link } from \"react-router-dom\";\n// import Sound from 'react-sound';\nimport swal from 'sweetalert';\nimport $ from \"jquery\";\n\nimport Header from \"./common/Header.js\";\nimport Pen from \"./assets/images/icons/pen.png\";\n\nvar _name, _tribute;\n\nclass Story extends React.Component {\n  constructor(props) {\n    super(props);\n    // let { user } = this.props.appstate;\n    this.state = {\n      tributes: [],\n      currentPage: 1,\n      tributesPerPage: 10\n    };\n  }\n\n  componentDidMount() {\n    this.fetchTributes();\n  }\n  \n  fetchTributes = e => {\n    axios\n      .get(`${axios.defaults.baseURL}/stories`)\n      .then(response => {\n        console.log(response);\n        return response;\n      })\n      .then(json => {\n        if (json.data.success) {\n          this.setState({ tributes: json.data.tributes });\n        } else alert(\"Fetching Tributes Failed!\");\n      })\n      .catch(error => {\n        console.error(`An Error Occured! ${error}`);\n      });\n  }\n\n  handleTributePost = e => {\n    e.preventDefault();\n\n    var formData = new FormData();\n    formData.append(\"name\", _name.value);\n    formData.append(\"tribute\", _tribute.value);\n\n    console.log(formData);\n\n  axios({\n      method: 'post',\n      url: `${axios.defaults.baseURL}/story`,\n      data: formData\n      })\n    .then(response => {\n      console.log(response);\n      return response;\n    })\n    .then(json => {\n      const { id, name, tribute } = json.data.tribute;\n      let tributeData = {\n        id,\n        name,\n        tribute,\n        timestamp: new Date().toString()\n      };\n      let appState = {\n        tribute: tributeData\n      };\n      // save app state with user date in local storage\n      localStorage[\"appState\"] = JSON.stringify(appState);\n      this.setState({\n        tribute: appState.tribute,\n      });\n\n      if (json.data.success === true) {\n        swal(\"Published!\", \"\" + json.data.message, \"success\", {\n          button: false,\n          timer: 1500\n        });\n        $(\"#name-input\").val('');\n        $(\"#tribute-input\").val('');\n        this.fetchTributes();\n        // redirect home\n        // this.props.history.push(\"/dashboard\");\n      } else {\n        // alert(json.data.message);\n        swal(\"Alert!\", \"\" + json.data.message, \"warning\");\n      }\n\n    })\n    .catch(error => {\n      // alert(\"An Error Occured!\" + error);\n      console.log(error.response.data);\n      swal(\"Warning!\", \"\" + error.response.data.message.tribute, \"warning\");\n    });\n\n  };\n\n\n  render() {\n\n    const { currentPage, tributesPerPage } = this.state;\n\n    // Logic for displaying tributes\n    const tributesList = this.state.tributes;\n    const indexOfLastTribute = currentPage * tributesPerPage;\n    const indexOfFirstTribute = indexOfLastTribute - tributesPerPage;\n    const currentTributes = tributesList.slice(indexOfFirstTribute, indexOfLastTribute);\n\n    const renderTributes = currentTributes.map((tribute, index) => {\n      return (\n          <div className=\"v-card\" key={tribute.id}>\n            <div className=\"tribute-card\">\n                  <p className=\"poster-name\">Posted by {tribute.name} on {tribute.date}</p>\n                  <p className=\"post\">{tribute.tribute}</p>\n            </div>\n          </div>\n      );\n    });\n\n    return (\n      <div>\n        <Header/>\n        \n        <div className=\"center-canvas\">\n        <div className=\"post-tribute-card\">\n            <h4 className=\"text-white\">Wrote a Story <img src={Pen} className=\"pen\" alt=\"\"/></h4><br/>\n            <div className=\"post-tribute-section\">\n              <div className=\"select-tribute\">\n                <img src={this.state.selectTribute} className=\"select-tribute-icon\" alt=\"\"/> \n              </div>\n              <div className=\"entry-form\">\n                <form onSubmit={this.handleTributePost} method=\"post\">\n                  <div class=\"form-group\">\n                    <textarea  ref={input => (_tribute = input)}  placeholder=\"Add your tribute text here...\" name=\"tribute\" type=\"text\" class=\"form-control\" maxlength=\"15000\" cols=\"20\" rows=\"5\" id=\"tribute-input\"/>\n                  </div>\n                  <div class=\"form-group\">\n                    <input ref={input => (_name = input)} name=\"name\"  placeholder=\"Please enter your name\" type=\"text\" class=\"form-control\" id=\"name-input\"/>\n                  </div>\n                  <button type=\"submit\" class=\"btn btn-primary float-right\">Publish Tribute</button>\n                </form>\n              </div>\n            </div>\n            <br/>\n            <br/>\n          </div>\n          <div className=\"center-content\"><br/>\n            <h4>Tributes <img src={Pen} className=\"pen\" alt=\"\"/></h4>\n          </div>\n            {renderTributes}\n        </div>\n      </div>\n    );\n  }\n}\n// module.exports = Tribute;\n\nexport default Story;\n"]},"metadata":{},"sourceType":"module"}