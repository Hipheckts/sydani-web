{"ast":null,"code":"import axios from 'axios';\nimport ApiJson from './ApiJson';\nimport history from './history';\nimport { getLocalStorage, clearLocalStorage } from '../helpers/Utils';\nimport { showErrorToast, showSuccessToast } from '../helpers/Toastr';\nlet apiFailCounter = 0;\naxios.defaults.baseURL = 'http://localhost:8000/api/v1';\naxios.interceptors.request.use(function (config) {\n  let userInfo = getLocalStorage('userInfo');\n\n  if (userInfo) {\n    if (userInfo.u_accesstoken) {\n      const access_token = userInfo.u_accesstoken;\n      config.headers.accesstoken = access_token;\n    }\n  }\n\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n});\n\nconst prepareDataObject = (_data_, paramObj) => {\n  for (let key in _data_) {\n    if (paramObj[key] || paramObj[key] === false) {\n      _data_[key] = paramObj[key];\n    } else {\n      if (typeof _data_[key] !== 'object') _data_[key] = '';\n    }\n  }\n\n  return _data_;\n};\n\nconst injectParamsToUrl = (_url_, paramObj) => {\n  var url = _url_;\n\n  for (let key in paramObj) {\n    url = url.replace(':' + key, paramObj[key]);\n  }\n\n  return url;\n};\n\nconst handleErrorByStatus = error => {\n  if (error && error.status === 'error') {\n    const message = error.message;\n    showErrorToast(message);\n  }\n};\n\nconst sapioApiService = (apiKeyName, data) => {\n  let apiDetails = ApiJson[apiKeyName];\n\n  if (!apiDetails) {\n    console.log('Api configuration do not found in api-json, please check api-json.js');\n    throw new Error('Api configuration do not found in api-json, please check api-json.js');\n  }\n\n  let requestObject = Object.assign({}, apiDetails);\n  requestObject.data = prepareDataObject(requestObject.data, data);\n  requestObject.url = injectParamsToUrl(requestObject.url, data);\n  return axios(requestObject).then(function (result) {\n    apiFailCounter = 0;\n\n    if (result && result.data && result.data.status === 'success') {\n      if (result.data.message) {\n        const message = result.data.message;\n\n        if (requestObject.showResultMessage === true) {\n          showSuccessToast(message);\n        }\n      }\n    } else {\n      const message = result.data.message;\n      console.log('Dd');\n      console.log('Dd', requestObject);\n\n      if (message == 100) {\n        clearLocalStorage();\n        history.push('/login');\n      } else if (requestObject.showErrorMessage === true) {\n        handleErrorByStatus(result.data);\n      }\n    }\n\n    return result;\n  }).catch(function (error) {\n    console.log('error', error);\n\n    if (error && error.response) {\n      if (requestObject.showErrorMessage === true) handleErrorByStatus(error.response);\n    }\n\n    if (error.config.maxContentLength - 1 && error.toString().indexOf('Network Error') > -1) {\n      apiFailCounter++;\n\n      if (apiFailCounter >= 3) {\n        localStorage.clear();\n        window.open(window.location.origin, '_self');\n      }\n    }\n\n    return error.response;\n  });\n};\n\nexport default sapioApiService;","map":{"version":3,"sources":["/Users/hipheckt/codes/sapio/src/common/api/ApiService.js"],"names":["axios","ApiJson","history","getLocalStorage","clearLocalStorage","showErrorToast","showSuccessToast","apiFailCounter","defaults","baseURL","interceptors","request","use","config","userInfo","u_accesstoken","access_token","headers","accesstoken","error","Promise","reject","prepareDataObject","_data_","paramObj","key","injectParamsToUrl","_url_","url","replace","handleErrorByStatus","status","message","sapioApiService","apiKeyName","data","apiDetails","console","log","Error","requestObject","Object","assign","then","result","showResultMessage","push","showErrorMessage","catch","response","maxContentLength","toString","indexOf","localStorage","clear","window","open","location","origin"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nimport ApiJson from './ApiJson';\nimport history from './history';\nimport { getLocalStorage, clearLocalStorage } from '../helpers/Utils';\nimport { showErrorToast, showSuccessToast } from '../helpers/Toastr';\n\nlet apiFailCounter = 0;\n\naxios.defaults.baseURL = 'http://localhost:8000/api/v1';\n\naxios.interceptors.request.use(\n  function(config) {\n    let userInfo = getLocalStorage('userInfo');\n    if (userInfo) {\n      if (userInfo.u_accesstoken) {\n        const access_token = userInfo.u_accesstoken;\n        config.headers.accesstoken = access_token;\n      }\n    }\n    return config;\n  },\n  function(error) {\n    return Promise.reject(error);\n  }\n);\n\nconst prepareDataObject = (_data_, paramObj) => {\n  for (let key in _data_) {\n    if (paramObj[key] || paramObj[key] === false) {\n      _data_[key] = paramObj[key];\n    } else {\n      if (typeof _data_[key] !== 'object') _data_[key] = '';\n    }\n  }\n  return _data_;\n};\n\nconst injectParamsToUrl = (_url_, paramObj) => {\n  var url = _url_;\n  for (let key in paramObj) {\n    url = url.replace(':' + key, paramObj[key]);\n  }\n  return url;\n};\n\nconst handleErrorByStatus = error => {\n  if (error && error.status === 'error') {\n    const message = error.message;\n    showErrorToast(message);\n  }\n};\n\nconst sapioApiService = (apiKeyName, data) => {\n  let apiDetails = ApiJson[apiKeyName];\n  if (!apiDetails) {\n    console.log(\n      'Api configuration do not found in api-json, please check api-json.js'\n    );\n    throw new Error(\n      'Api configuration do not found in api-json, please check api-json.js'\n    );\n  }\n\n  let requestObject = Object.assign({}, apiDetails);\n  requestObject.data = prepareDataObject(requestObject.data, data);\n  requestObject.url = injectParamsToUrl(requestObject.url, data);\n\n  return axios(requestObject)\n    .then(function(result) {\n      apiFailCounter = 0;\n      if (result && result.data && result.data.status === 'success') {\n        if (result.data.message) {\n          const message = result.data.message;\n          if (requestObject.showResultMessage === true) {\n            showSuccessToast(message);\n          }\n        }\n      } else {\n        const message = result.data.message;\n        console.log('Dd');\n        console.log('Dd' , requestObject);\n        if (message == 100) {\n          clearLocalStorage();\n          history.push('/login');\n        } else if (requestObject.showErrorMessage === true) {\n          handleErrorByStatus(result.data);\n        }\n      }\n      return result;\n    })\n    .catch(function(error) {\n      console.log('error', error);\n      if (error && error.response) {\n        if (requestObject.showErrorMessage === true)\n          handleErrorByStatus(error.response);\n      }\n\n      if (\n        error.config.maxContentLength - 1 &&\n        error.toString().indexOf('Network Error') > -1\n      ) {\n        apiFailCounter++;\n        if (apiFailCounter >= 3) {\n          localStorage.clear();\n          window.open(window.location.origin, '_self');\n        }\n      }\n      return error.response;\n    });\n};\n\nexport default sapioApiService;\n"]},"metadata":{},"sourceType":"module"}