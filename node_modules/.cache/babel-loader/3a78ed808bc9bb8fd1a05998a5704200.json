{"ast":null,"code":"var _jsxFileName = \"/Users/hipheckt/codes/sapio/src/common/helpers/RenderField.js\";\nimport React from 'react';\nexport default (({\n  input,\n  label,\n  type,\n  className,\n  autoComplete,\n  maxLength,\n  placeholder,\n  readOnly,\n  style,\n  onPaste,\n  meta: {\n    error,\n    touched\n  }\n}) => /*#__PURE__*/React.createElement(React.Fragment, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"input\", Object.assign({}, input, {\n  placeholder: placeholder,\n  type: type,\n  className: className,\n  autoComplete: autoComplete,\n  maxLength: maxLength,\n  readOnly: readOnly,\n  style: style,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }\n})), touched && error && /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 27\n  }\n}, error)));","map":{"version":3,"sources":["/Users/hipheckt/codes/sapio/src/common/helpers/RenderField.js"],"names":["React","input","label","type","className","autoComplete","maxLength","placeholder","readOnly","style","onPaste","meta","error","touched"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,gBAAe,CAAC;AACdC,EAAAA,KADc;AAEdC,EAAAA,KAFc;AAGdC,EAAAA,IAHc;AAIdC,EAAAA,SAJc;AAKdC,EAAAA,YALc;AAMdC,EAAAA,SANc;AAOdC,EAAAA,WAPc;AAQdC,EAAAA,QARc;AASdC,EAAAA,KATc;AAUdC,EAAAA,OAVc;AAWdC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAXQ,CAAD,kBAcb,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,+CACMZ,KADN;AAEE,EAAA,WAAW,EAAEM,WAFf;AAGE,EAAA,IAAI,EAAEJ,IAHR;AAIE,EAAA,SAAS,EAAEC,SAJb;AAKE,EAAA,YAAY,EAAEC,YALhB;AAME,EAAA,SAAS,EAAEC,SANb;AAOE,EAAA,QAAQ,EAAEE,QAPZ;AAQE,EAAA,KAAK,EAAEC,KART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADF,EAWGI,OAAO,IAAKD,KAAK,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAOA,KAAP,CAXxB,CAdF","sourcesContent":["import React from 'react';\n\nexport default ({\n  input,\n  label,\n  type,\n  className,\n  autoComplete,\n  maxLength,\n  placeholder,\n  readOnly,\n  style,\n  onPaste,\n  meta: { error, touched }\n}) => (\n  \n  <React.Fragment>\n    <input\n      {...input}\n      placeholder={placeholder}\n      type={type}\n      className={className}\n      autoComplete={autoComplete}\n      maxLength={maxLength}\n      readOnly={readOnly}\n      style={style}\n    />\n    {touched && (error && <span>{error}</span>)}\n  </React.Fragment>\n);\n"]},"metadata":{},"sourceType":"module"}