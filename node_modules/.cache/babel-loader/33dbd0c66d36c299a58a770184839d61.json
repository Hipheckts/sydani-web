{"ast":null,"code":"var _jsxFileName = \"/Users/hipheckt/codes/sapioclub/react/src/PrivateRoute.js\";\n// This is used to determine if a user is authenticated and\n// if they are allowed to visit the page they navigated to.\n// If they are: they proceed to the page\n// If not: they are redirected to the login page.\nimport React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport axios from \"axios\";\nimport swal from \"sweetalert\";\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  // Add your own authentication on the below line.\n  const isLoggedIn = localStorage[\"appState\"] ? JSON.parse(localStorage[\"appState\"]).isLoggedIn : \"\";\n  this.state = {\n    token: localStorage[\"appState\"] ? JSON.parse(localStorage[\"appState\"]).user.token : \"\",\n    user: []\n  };\n  axios.get(`${axios.defaults.baseURL}/user/${JSON.parse(localStorage[\"appState\"]).user.id}`, {\n    headers: {\n      Authorization: `Bearer ${this.state.token}`\n    }\n  }).then(response => {\n    //console.log(response);\n    return response;\n  }).then(json => {\n    if (json.data.success) {\n      this.setState({\n        user: json.data.user[0]\n      }); // } else alert(\"Cannot Fetch Data!\");\n    } else swal(\"Oops!\", \"Cannot Fetch Data!\", \"error\");\n  }).catch(error => {\n    console.error(`An Error Occured! ${error}`);\n  }); // alert(id)\n\n  let date = 20;\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => isLoggedIn ? date != 15 ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: '/expired',\n        state: {\n          from: props.location\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: '/login',\n        state: {\n          from: props.location\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default PrivateRoute;","map":{"version":3,"sources":["/Users/hipheckt/codes/sapioclub/react/src/PrivateRoute.js"],"names":["React","Redirect","Route","axios","swal","PrivateRoute","component","Component","rest","isLoggedIn","localStorage","JSON","parse","state","token","user","get","defaults","baseURL","id","headers","Authorization","then","response","json","data","success","setState","catch","error","console","date","props","pathname","from","location"],"mappings":";AAAA;AACA;AAEA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,YAAjB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAE1D;AACA,QAAMC,UAAU,GAAGC,YAAY,CAAC,UAAD,CAAZ,GAA2BC,IAAI,CAACC,KAAL,CAAWF,YAAY,CAAC,UAAD,CAAvB,EAAqCD,UAAhE,GAA6E,EAAhG;AAEA,OAAKI,KAAL,GAAa;AACXC,IAAAA,KAAK,EAAEJ,YAAY,CAAC,UAAD,CAAZ,GACHC,IAAI,CAACC,KAAL,CAAWF,YAAY,CAAC,UAAD,CAAvB,EAAqCK,IAArC,CAA0CD,KADvC,GAEH,EAHO;AAIXC,IAAAA,IAAI,EAAE;AAJK,GAAb;AAOEZ,EAAAA,KAAK,CACFa,GADH,CAEK,GAAEb,KAAK,CAACc,QAAN,CAAeC,OAAQ,SACxBP,IAAI,CAACC,KAAL,CAAWF,YAAY,CAAC,UAAD,CAAvB,EAAqCK,IAArC,CAA0CI,EAC3C,EAJL,EAKI;AACEC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAG,UAAS,KAAKR,KAAL,CAAWC,KAAM;AADnC;AADX,GALJ,EAWGQ,IAXH,CAWSC,QAAD,IAAc;AAClB;AACA,WAAOA,QAAP;AACD,GAdH,EAeGD,IAfH,CAeSE,IAAD,IAAU;AACd,QAAIA,IAAI,CAACC,IAAL,CAAUC,OAAd,EAAuB;AACrB,WAAKC,QAAL,CAAc;AACZZ,QAAAA,IAAI,EAAES,IAAI,CAACC,IAAL,CAAUV,IAAV,CAAe,CAAf;AADM,OAAd,EADqB,CAIrB;AACD,KALD,MAKOX,IAAI,CAAC,OAAD,EAAU,oBAAV,EAAgC,OAAhC,CAAJ;AACR,GAtBH,EAuBGwB,KAvBH,CAuBUC,KAAD,IAAW;AAChBC,IAAAA,OAAO,CAACD,KAAR,CAAe,qBAAoBA,KAAM,EAAzC;AACD,GAzBH,EAZwD,CAsCxD;;AAEF,MAAIE,IAAI,GAAG,EAAX;AAEA,sBACE,oBAAC,KAAD,oBACMvB,IADN;AAEE,IAAA,MAAM,EAAEwB,KAAK,IACXvB,UAAU,GACRsB,IAAI,IAAI,EAAR,gBACE,oBAAC,SAAD,oBAAeC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,gBAGE,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAEC,QAAAA,QAAQ,EAAE,UAAZ;AAAwBpB,QAAAA,KAAK,EAAE;AAAEqB,UAAAA,IAAI,EAAEF,KAAK,CAACG;AAAd;AAA/B,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJM,gBAOR,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAEF,QAAAA,QAAQ,EAAE,QAAZ;AAAsBpB,QAAAA,KAAK,EAAE;AAAEqB,UAAAA,IAAI,EAAEF,KAAK,CAACG;AAAd;AAA7B,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAgBD,CA1DD;;AA4DA,eAAe9B,YAAf","sourcesContent":["// This is used to determine if a user is authenticated and\n// if they are allowed to visit the page they navigated to.\n\n// If they are: they proceed to the page\n// If not: they are redirected to the login page.\nimport React from 'react'\nimport { Redirect, Route } from 'react-router-dom'\nimport axios from \"axios\";\nimport swal from \"sweetalert\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n\n  // Add your own authentication on the below line.\n  const isLoggedIn = localStorage[\"appState\"] ? JSON.parse(localStorage[\"appState\"]).isLoggedIn : \"\";\n\n  this.state = {\n    token: localStorage[\"appState\"]\n      ? JSON.parse(localStorage[\"appState\"]).user.token\n      : \"\",\n    user: [],\n  };\n  \n    axios\n      .get(\n        `${axios.defaults.baseURL}/user/${\n          JSON.parse(localStorage[\"appState\"]).user.id\n        }`,\n        {\n          headers: {\n            Authorization: `Bearer ${this.state.token}`,\n          },\n        }\n      )\n      .then((response) => {\n        //console.log(response);\n        return response;\n      })\n      .then((json) => {\n        if (json.data.success) {\n          this.setState({\n            user: json.data.user[0],\n          });\n          // } else alert(\"Cannot Fetch Data!\");\n        } else swal(\"Oops!\", \"Cannot Fetch Data!\", \"error\");\n      })\n      .catch((error) => {\n        console.error(`An Error Occured! ${error}`);\n      });\n    // alert(id)\n\n  let date = 20;\n\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        isLoggedIn ? (\n          date != 15 ? (\n            <Component {...props} />\n          ) : (\n            <Redirect to={{ pathname: '/expired', state: { from: props.location } }} />\n          )\n        ) : (\n          <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n        )\n      }\n    />\n  )\n}\n\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}