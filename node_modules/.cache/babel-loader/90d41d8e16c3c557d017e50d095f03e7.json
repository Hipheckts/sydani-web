{"ast":null,"code":"var _jsxFileName = \"/Users/hipheckt/codes/sapio/src/Login.js\";\nimport React, { Component } from \"react\";\nimport { Field, reduxForm, reset, change, untouch } from \"redux-form\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport * as qs from \"query-string\";\nimport { actionLogin } from \"./common/redux/actions/\";\nimport RenderField from \"./common/helpers/RenderField\";\nimport Validation from \"./common/helpers/Validation\";\nimport { setLocalStorage, removeLocalStorage, getLocalStorage, base64_decode, clearLocalStorage } from \"./common/helpers/Utils\";\nimport trustFundApiService from \"./common/api/ApiService\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setLoginData = () => {\n      if (getLocalStorage(\"remember\")) {\n        let loginInfo = getLocalStorage(\"remember\");\n        this.props.initialize({\n          email: loginInfo.email,\n          password: loginInfo.password,\n          rememberme: true\n        });\n      }\n    };\n\n    this.handleSubmit = formValues => {\n      let data = formValues;\n\n      const _this = this;\n\n      _this.setState({\n        loader: true\n      });\n\n      this.props.actionLogin(data).then(result => {\n        if (result && result.data && result.data.success === \"true\") {\n          setLocalStorage(\"userInfo\", result.data.data);\n\n          _this.setState({\n            loader: false\n          });\n\n          if (data.rememberme === true) {\n            let loginInfo = {\n              email: data.email,\n              password: data.password\n            };\n            setLocalStorage(\"remember\", loginInfo);\n          } else {\n            removeLocalStorage(\"remember\");\n            this.props.history.push(\"/\");\n          }\n        } else {\n          _this.setState({\n            loader: false\n          });\n\n          this.props.dispatch(change(\"loginForm\", \"password\", \"\"));\n          this.props.dispatch(untouch(\"loginForm\", \"password\", \"\"));\n        }\n      }).catch(error => {\n        _this.setState({\n          loader: false\n        });\n\n        console.log(error);\n      });\n    };\n\n    this.state = {\n      termschecked: \"0\",\n      loader: false\n    };\n  }\n\n  componentDidMount() {\n    document.title = \"Log In\";\n    this.props.dispatch(reset(\"loginForm\"));\n    this.setLoginData();\n    const {\n      location\n    } = this.props;\n  } // if remember checkbox is checked\n\n\n  render() {\n    const {\n      handleSubmit,\n      submitting\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"section\", {\n      id: \"bg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"register-view\",\n      className: \"uk-width-1-1@m uk-child-width-1-2@m\",\n      \"data-uk-grid\": true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"signin\",\n      className: \"uk-flex-middle uk-flex-center uk-flex-last@m uk-margin-remove\",\n      \"data-uk-grid\": true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, this.state.loader ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spinner-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spinner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"\",\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 19\n      }\n    }))) : \"\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \" uk-width-4-5 uk-padding-remove-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"uk-height-1-1 loginReg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"uk-h3 theme-color\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, \"Account Login\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"uk-form-stacked\",\n      id: \"loginForm\",\n      onSubmit: handleSubmit(values => this.handleSubmit({ ...values,\n        email: values && values.email ? values.email.toLowerCase() : \"\"\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"uk-margin-medium-top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"uk-form-controls\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      component: RenderField,\n      className: \"uk-input\",\n      name: \"email\",\n      id: \"reg-email\",\n      type: \"text\",\n      placeholder: \"Enter your email\",\n      autoComplete: \"username\",\n      validate: [Validation.emailRequired, Validation.isEmail],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"uk-form-label\",\n      htmlFor: \"usname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 23\n      }\n    }, \"Email\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"uk-margin-medium-top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"uk-form-controls\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      component: RenderField,\n      className: \"uk-input\",\n      name: \"password\",\n      id: \"reg-password\",\n      type: \"password\",\n      placeholder: \"Enter your password\",\n      autoComplete: \"new-password\",\n      maxLength: \"40\",\n      validate: [Validation.passwordRequired, Validation.noSpace],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"uk-form-label\",\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 23\n      }\n    }, \"Password\"))), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"uk-margin-top uk-display-inline-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"rememberme\",\n      id: \"reg-rememberme\",\n      component: RenderField,\n      type: \"checkbox\",\n      className: \"uk-checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }\n    }), \" \", \"Save Password\"), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"uk-margin-top uk-text-right uk-display-inline-block uk-align-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/forgot\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 21\n      }\n    }, \"Forgot password ?\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"uk-margin-medium-top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"uk-button prog-button\",\n      type: \"submit\",\n      disabled: submitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 23\n      }\n    }, \"Login\")), /*#__PURE__*/React.createElement(Link, {\n      to: \"/register\",\n      className: \"uk-link uk-link-reset uk-margin-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"uk-position-relative uk-position-z-index\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 23\n      }\n    }, \"No Account?\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"theme-color\",\n      onClick: () => this.props.history.push(\"/register\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 25\n      }\n    }, \"Click to Join Now\"))))))), /*#__PURE__*/React.createElement(Link, {\n      className: \"uk-link uk-hidden@m uk-link-reset uk-margin-right\",\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"theme-color\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 15\n      }\n    }, \"Go Home\")))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  //console.log(state);\n  const {\n    userData\n  } = state.user;\n  return {\n    userData\n  };\n};\n\nLogin = connect(mapStateToProps, {\n  actionLogin\n})(Login);\nexport default reduxForm({\n  form: \"loginForm\",\n  touchOnBlur: false,\n  destroyOnUnmount: true\n})(withRouter(Login));","map":{"version":3,"sources":["/Users/hipheckt/codes/sapio/src/Login.js"],"names":["React","Component","Field","reduxForm","reset","change","untouch","Link","withRouter","connect","qs","actionLogin","RenderField","Validation","setLocalStorage","removeLocalStorage","getLocalStorage","base64_decode","clearLocalStorage","trustFundApiService","Login","constructor","props","setLoginData","loginInfo","initialize","email","password","rememberme","handleSubmit","formValues","data","_this","setState","loader","then","result","success","history","push","dispatch","catch","error","console","log","state","termschecked","componentDidMount","document","title","location","render","submitting","values","toLowerCase","emailRequired","isEmail","passwordRequired","noSpace","mapStateToProps","userData","user","form","touchOnBlur","destroyOnUnmount"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Field, reduxForm, reset, change, untouch } from \"redux-form\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport * as qs from \"query-string\";\r\n\r\nimport { actionLogin } from \"./common/redux/actions/\";\r\nimport RenderField from \"./common/helpers/RenderField\";\r\nimport Validation from \"./common/helpers/Validation\";\r\nimport {\r\n  setLocalStorage,\r\n  removeLocalStorage,\r\n  getLocalStorage,\r\n  base64_decode,\r\n  clearLocalStorage,\r\n} from \"./common/helpers/Utils\";\r\nimport trustFundApiService from \"./common/api/ApiService\";\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      termschecked: \"0\",\r\n      loader: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.title = \"Log In\";\r\n    this.props.dispatch(reset(\"loginForm\"));\r\n    this.setLoginData();\r\n    const { location } = this.props;\r\n  \r\n  }\r\n\r\n  \r\n  // if remember checkbox is checked\r\n  setLoginData = () => {\r\n    if (getLocalStorage(\"remember\")) {\r\n      let loginInfo = getLocalStorage(\"remember\");\r\n      this.props.initialize({\r\n        email: loginInfo.email,\r\n        password: loginInfo.password,\r\n        rememberme: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleSubmit = (formValues) => {\r\n    let data = formValues;\r\n    const _this = this;\r\n    _this.setState({ loader: true });\r\n    this.props\r\n      .actionLogin(data)\r\n      .then((result) => {\r\n        if (result && result.data && result.data.success === \"true\") {\r\n          setLocalStorage(\"userInfo\", result.data.data);\r\n          _this.setState({ loader: false });\r\n          if (data.rememberme === true) {\r\n            let loginInfo = {\r\n              email: data.email,\r\n              password: data.password,\r\n            };\r\n            setLocalStorage(\"remember\", loginInfo);\r\n          } else {\r\n            removeLocalStorage(\"remember\");\r\n            this.props.history.push(\"/\");\r\n          }\r\n        } else {\r\n          _this.setState({ loader: false });\r\n          this.props.dispatch(change(\"loginForm\", \"password\", \"\"));\r\n          this.props.dispatch(untouch(\"loginForm\", \"password\", \"\"));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        _this.setState({ loader: false });\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  \r\n\r\n  render() {\r\n    const { handleSubmit, submitting } = this.props;\r\n\r\n    return (\r\n      <section id=\"bg\">\r\n        <div\r\n          id=\"register-view\"\r\n          className=\"uk-width-1-1@m uk-child-width-1-2@m\"\r\n          data-uk-grid\r\n        >\r\n          <div\r\n            id=\"signin\"\r\n            className=\"uk-flex-middle uk-flex-center uk-flex-last@m uk-margin-remove\"\r\n            data-uk-grid\r\n          >\r\n            {this.state.loader ? (\r\n              <div className=\"spinner-wrapper\">\r\n                <div className=\"spinner\">\r\n                  <img src=\"\" alt=\"\" />\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <div className=\" uk-width-4-5 uk-padding-remove-left\">\r\n              <div className=\"uk-height-1-1 loginReg\">\r\n                <h2 className=\"uk-h3 theme-color\">Account Login</h2>\r\n                <form\r\n                  className=\"uk-form-stacked\"\r\n                  id=\"loginForm\"\r\n                  onSubmit={handleSubmit((values) =>\r\n                    this.handleSubmit({\r\n                      ...values,\r\n                      email:\r\n                        values && values.email\r\n                          ? values.email.toLowerCase()\r\n                          : \"\",\r\n                    })\r\n                  )}\r\n                >\r\n                  <div className=\"uk-margin-medium-top\">\r\n                    <div className=\"uk-form-controls\">\r\n                      <Field\r\n                        component={RenderField}\r\n                        className=\"uk-input\"\r\n                        name=\"email\"\r\n                        id=\"reg-email\"\r\n                        type=\"text\"\r\n                        placeholder=\"Enter your email\"\r\n                        autoComplete=\"username\"\r\n                        validate={[\r\n                          Validation.emailRequired,\r\n                          Validation.isEmail,\r\n                        ]}\r\n                      />\r\n                      <label className=\"uk-form-label\" htmlFor=\"usname\">\r\n                        Email\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"uk-margin-medium-top\">\r\n                    <div className=\"uk-form-controls\">\r\n                      <Field\r\n                        component={RenderField}\r\n                        className=\"uk-input\"\r\n                        name=\"password\"\r\n                        id=\"reg-password\"\r\n                        type=\"password\"\r\n                        placeholder=\"Enter your password\"\r\n                        autoComplete=\"new-password\"\r\n                        maxLength=\"40\"\r\n                        validate={[\r\n                          Validation.passwordRequired,\r\n                          Validation.noSpace,\r\n                        ]}\r\n                      />\r\n                      <label className=\"uk-form-label\" htmlFor=\"password\">\r\n                        Password\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <label className=\"uk-margin-top uk-display-inline-block\">\r\n                    <Field\r\n                      name=\"rememberme\"\r\n                      id=\"reg-rememberme\"\r\n                      component={RenderField}\r\n                      type=\"checkbox\"\r\n                      className=\"uk-checkbox\"\r\n                    />{\" \"}\r\n                    Save Password\r\n                  </label>\r\n                  <label className=\"uk-margin-top uk-text-right uk-display-inline-block uk-align-right\">\r\n                    <Link to=\"/forgot\">Forgot password ?</Link>\r\n                  </label>\r\n                  <div className=\"uk-margin-medium-top\">\r\n                    <button\r\n                      className=\"uk-button prog-button\"\r\n                      type=\"submit\"\r\n                      disabled={submitting}\r\n                    >\r\n                      <span>Login</span>\r\n                    </button>\r\n                    <Link\r\n                      to=\"/register\"\r\n                      className=\"uk-link uk-link-reset uk-margin-left\"\r\n                    >\r\n                      <span className=\"uk-position-relative uk-position-z-index\">\r\n                        No Account?{\" \"}\r\n                        <span\r\n                          className=\"theme-color\"\r\n                          onClick={() => this.props.history.push(\"/register\")}\r\n                        >\r\n                          Click to Join Now\r\n                        </span>\r\n                      </span>\r\n                    </Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n            <Link\r\n              className=\"uk-link uk-hidden@m uk-link-reset uk-margin-right\"\r\n              to=\"/\"\r\n            >\r\n              <br />\r\n              <span className=\"theme-color\">Go Home</span>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  //console.log(state);\r\n  const { userData } = state.user;\r\n  return { userData };\r\n};\r\n\r\nLogin = connect(mapStateToProps, { actionLogin })(Login);\r\n\r\nexport default reduxForm({\r\n  form: \"loginForm\",\r\n  touchOnBlur: false,\r\n  destroyOnUnmount: true,\r\n})(withRouter(Login));\r\n"]},"metadata":{},"sourceType":"module"}