{"ast":null,"code":"import React, { memo, useState, useCallback, useEffect } from 'react';\nvar styles = {\n  \"blinkingCursor\": \"_288eE\",\n  \"blink\": \"_dHnpo\"\n};\n\nvar Typewriter = function Typewriter(_ref) {\n  var words = _ref.words,\n      _ref$loop = _ref.loop,\n      loop = _ref$loop === void 0 ? false : _ref$loop,\n      _ref$cursor = _ref.cursor,\n      cursor = _ref$cursor === void 0 ? false : _ref$cursor,\n      _ref$cursorStyle = _ref.cursorStyle,\n      cursorStyle = _ref$cursorStyle === void 0 ? '|' : _ref$cursorStyle,\n      _ref$typeSpeed = _ref.typeSpeed,\n      typeSpeed = _ref$typeSpeed === void 0 ? 100 : _ref$typeSpeed,\n      _ref$delaySpeed = _ref.delaySpeed,\n      delaySpeed = _ref$delaySpeed === void 0 ? 1500 : _ref$delaySpeed,\n      _ref$deleteSpeed = _ref.deleteSpeed,\n      deleteSpeed = _ref$deleteSpeed === void 0 ? 50 : _ref$deleteSpeed;\n\n  var _useState = useState(typeSpeed),\n      speed = _useState[0],\n      setSpeed = _useState[1];\n\n  var _useState2 = useState(''),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  var _useState3 = useState(false),\n      isDeleting = _useState3[0],\n      setDeleting = _useState3[1];\n\n  var _useState4 = useState(0),\n      counter = _useState4[0],\n      setCounter = _useState4[1];\n\n  var handleTyping = useCallback(function () {\n    var index = loop ? counter % words.length : counter;\n    var word = words[index];\n    setSpeed(typeSpeed);\n\n    if (isDeleting) {\n      setSpeed(deleteSpeed);\n      setText(function (prev) {\n        return word.substring(0, prev.length - 1);\n      });\n    } else {\n      setText(function (prev) {\n        return word.substring(0, prev.length + 1);\n      });\n    }\n\n    if (!isDeleting && text === word) {\n      if (!loop && counter >= words.length - 1) return;\n      setDeleting(true);\n      setSpeed(delaySpeed);\n    } else if (isDeleting && text === '') {\n      setDeleting(false);\n      setCounter(function (prev) {\n        return prev + 1;\n      });\n    }\n  }, [delaySpeed, isDeleting, counter, deleteSpeed, loop, text, typeSpeed, words]);\n  useEffect(function () {\n    var timer = setTimeout(function () {\n      return handleTyping();\n    }, speed);\n    return function () {\n      return clearTimeout(timer);\n    };\n  }, [handleTyping, speed]);\n  return React.createElement(React.Fragment, null, React.createElement(\"span\", null, text), cursor && React.createElement(\"span\", {\n    className: styles.blinkingCursor\n  }, cursorStyle));\n};\n\nvar index = memo(Typewriter);\nexport default index;","map":{"version":3,"sources":["../src/index.tsx"],"names":["Typewriter","words","loop","cursor","cursorStyle","typeSpeed","delaySpeed","deleteSpeed","speed","setSpeed","useState","text","setText","isDeleting","setDeleting","counter","setCounter","handleTyping","useCallback","index","word","prev","useEffect","timer","setTimeout","clearTimeout","React","className","styles","blinkingCursor","memo"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback, memo } from 'react'\nimport styles from './styles.module.css'\n\ninterface TypewriterProps {\n  words: string[]\n  loop?: boolean\n  cursor?: boolean\n  cursorStyle?: string\n  typeSpeed?: number\n  deleteSpeed?: number\n  delaySpeed?: number\n}\n\nconst Typewriter: React.FC<TypewriterProps> = ({\n  words,\n  loop = false,\n  cursor = false,\n  cursorStyle = '|',\n  typeSpeed = 100,\n  delaySpeed = 1500,\n  deleteSpeed = 50\n}) => {\n  // State\n  const [speed, setSpeed] = useState<number>(typeSpeed)\n  const [text, setText] = useState<string>('')\n  const [isDeleting, setDeleting] = useState<boolean>(false)\n  const [counter, setCounter] = useState<number>(0)\n\n  const handleTyping = useCallback(() => {\n    const index: number = loop ? counter % words.length : counter\n    const word: string = words[index]\n    setSpeed(typeSpeed)\n\n    if (isDeleting) {\n      // Set stoping speed\n      setSpeed(deleteSpeed)\n      setText((prev) => word.substring(0, prev.length - 1))\n    } else {\n      setText((prev) => word.substring(0, prev.length + 1))\n    }\n\n    if (!isDeleting && text === word) {\n      if (!loop && counter >= words.length - 1) return\n      setDeleting(true)\n      setSpeed(delaySpeed)\n    } else if (isDeleting && text === '') {\n      setDeleting(false)\n      setCounter((prev) => prev + 1)\n    }\n  }, [\n    delaySpeed,\n    isDeleting,\n    counter,\n    deleteSpeed,\n    loop,\n    text,\n    typeSpeed,\n    words\n  ])\n\n  // Effect\n  useEffect(() => {\n    const timer = setTimeout(() => handleTyping(), speed)\n    return () => clearTimeout(timer)\n  }, [handleTyping, speed])\n\n  return (\n    <React.Fragment>\n      <span>{text}</span>\n      {cursor && <span className={styles.blinkingCursor}>{cursorStyle}</span>}\n    </React.Fragment>\n  )\n}\n\nexport default memo(Typewriter)\n"]},"metadata":{},"sourceType":"module"}